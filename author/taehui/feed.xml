<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator>
  <link href="https://taehui.github.io/author/taehui/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://taehui.github.io/" rel="alternate" type="text/html" />
  <updated>2021-01-31T21:10:15+09:00</updated>
  <id>https://taehui.github.io/author/taehui/feed.xml</id>

  
  
  

  
    <title type="html">코딩하는 할배 | </title>
  

  
    <subtitle>소프트웨어 개발자를 위해 기술에 대한 이야기를 합니다.</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">Hive 사용 시 Small File Merge 방법</title>
      <link href="https://taehui.github.io/hive-small-file-merge" rel="alternate" type="text/html" title="Hive 사용 시 Small File Merge 방법" />
      <published>2020-01-29T04:38:00+09:00</published>
      <updated>2020-01-29T04:38:00+09:00</updated>
      <id>https://taehui.github.io/hive-small-file-merge</id>
      <content type="html" xml:base="https://taehui.github.io/hive-small-file-merge">&lt;h2 id=&quot;하이브-설정을-통한-병합&quot;&gt;하이브 설정을 통한 병합&lt;/h2&gt;
&lt;p&gt;관련 설정 4가지 중에서,&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;hive.merge.mapfiles – Merge small files at the end of a map-only job.&lt;/li&gt;
  &lt;li&gt;hive.merge.mapredfiles – Merge small files at the end of a map-reduce job.&lt;/li&gt;
  &lt;li&gt;hive.merge.size.per.task – Size of merged files at the end of the job.&lt;/li&gt;
  &lt;li&gt;hive.merge.smallfiles.avgsize – When the average output file size of a job is less than this number, Hive will start an additional map-reduce job to merge the output files into bigger files. This is only done for map-only jobs if hive.merge.mapfiles is true, and for map-reduce jobs if hive.merge.mapredfiles is true.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;아래와 같이, 기본값이 false 인 hive.merge.mapredfiles 값을 True 로 설정, 나머지 설정의 
기본값은 아래를 참조하여 원하는 값으로 변경&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;hive.merge.mapredfiles=true&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;hive.merge.mapfiles=true&lt;/li&gt;
  &lt;li&gt;hive.merge.size.per.task=256000000&lt;/li&gt;
  &lt;li&gt;hive.merge.smallfiles.avgsize=16000000&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이렇게 설정하면, 출력 파일들의 평균 크기가 hive.merge.smallfiles.avgsize 보다 작으면 병합을 하며, 합병된 파일의 최대 크기는 hive.merge.size.per.task 의 설정 값을 따르게 된다.&lt;/p&gt;

&lt;h2 id=&quot;테이블-다시쓰기를-통한-병합&quot;&gt;테이블 다시쓰기를 통한 병합&lt;/h2&gt;
&lt;p&gt;설정을 통해 Reduce Task 수를 1로 설정한다.&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mapred&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tasks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;테이블 전체 데이터를 조회 후 INSERT OVERWRITE 로 다시쓰기&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;OVERWRITE&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;table_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 
&lt;span class=&quot;nx&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;table_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>Taehui Hong</name>
        
        
      </author>

      

      
        <category term="platform" />
      

      
        <summary type="html">하이브 설정을 통한 병합 관련 설정 4가지 중에서,</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">마크다운(kramdown) 사용법</title>
      <link href="https://taehui.github.io/markdown-usage" rel="alternate" type="text/html" title="마크다운(kramdown) 사용법" />
      <published>2020-01-24T05:40:00+09:00</published>
      <updated>2020-01-24T05:40:00+09:00</updated>
      <id>https://taehui.github.io/markdown-usage</id>
      <content type="html" xml:base="https://taehui.github.io/markdown-usage">&lt;p&gt;마크다운은 사람들이 읽기 쉽고 쓰기 쉬운 플레인 텍스트 포맷을 사용하여, 서식이 있는 문서를 작성하기 위해 만들어진 마크업 언어입니다.
2004년 존 그루버가 RSS 1.0 의 공저자인 애런 스워츠와 협업을 통해 만들었으며, 아래 이미지를 보시면 보다 쉽게 이해가 됩니다.
&lt;img src=&quot;assets/built/images/markdown-sample.jpg&quot; alt=&quot;마크다운샘플&quot; /&gt;
화면 왼쪽이 작성된 마크다운 코드이고, 오른쪽이 서식이 적용된 HTML 결과 입니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/markdown/markdown.github.com/wiki/Implementations&quot;&gt;마크다운 파서의 구현체&lt;/a&gt; 는 굉장히 다양하게 존재하는데, 
구현체 마다 표현법이 다양하기 때문에, 내 맘에 잘 맞는 구현체를 고르기 위해서 &lt;a href=&quot;https://babelmark.github.io/&quot;&gt;babelmark3&lt;/a&gt; 에서 테스트를 
해보는 방법을 추천 드립니다. babelmark3 에서는 같은 마크업 코드를 서로 다른 구현체에서 어떻게 표현해 주는지 한번에 출력을 해주기 때문에 
유용하게 활용할 수 있습니다.&lt;/p&gt;

&lt;h3 id=&quot;commonmark&quot;&gt;CommonMark&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://commonmark.org/&quot;&gt;CommonMark&lt;/a&gt; 는 서로다른 기능으로 구현된 마크다운의 표준 문법을 정의하는 프로젝트입니다. 
CommonMark 에서 정의한 스펙에 따라 이를 기반으로 많은 마크다운이 탄생하였으며 Kramdown 또한 하나의 구현체 입니다.&lt;/p&gt;

&lt;h3 id=&quot;kramdown&quot;&gt;Kramdown&lt;/h3&gt;
&lt;p&gt;최근 많은 개발자들이 &lt;code class=&quot;highlighter-rouge&quot;&gt;아이디.github.io&lt;/code&gt; 주소를 가지는 블로그 사이트를 운영하는 추세입니다. 바로 &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt; 를 
이용한 블로그 운영을 하는 것 인데요, GitHub Pages 는 &lt;a href=&quot;https://jamstack.org/generators/&quot;&gt;Static Page Generator&lt;/a&gt; 를 기반으로 
생성된 정적 웹페이지를, GitHub 기반으로 호스팅하는 방식의 블로그 입니다.&lt;/p&gt;

&lt;p&gt;수 많은 &lt;a href=&quot;https://jamstack.org/generators/&quot;&gt;Static Page Generator&lt;/a&gt; 중에서, GitHub 의 CEO 가 만든 생성기인 지킬(Jekyll) 은 가장
인기있는 생성기 중 하나이며, 이 지킬 내에서 지원하는 마크다운이 바로 Kramdown 입니다. 때문에, &lt;code class=&quot;highlighter-rouge&quot;&gt;아이디.github.io&lt;/code&gt; 의 블로그를 운영하고
싶다면 Kramdown 의 사용법을 알아두셔야 하겠습니다.&lt;/p&gt;

&lt;h2 id=&quot;마크다운kramdown-사용법&quot;&gt;마크다운(Kramdown) 사용법&lt;/h2&gt;
&lt;p&gt;크램다운 홈페이지의 레퍼런스 문서에 정리된 내용을 바탕으로 사용법을 아래와 같이 정리해 보았습니다.&lt;/p&gt;

&lt;h3 id=&quot;헤더header-표현1&quot;&gt;헤더(Header) 표현(1)&lt;/h3&gt;
&lt;p&gt;헤더를 표현하는 첫번째 방법은, &lt;code class=&quot;highlighter-rouge&quot;&gt;#&lt;/code&gt; 의 갯수를 통해 6가지 크기로 표현하는 방법이다. 아래 그림에서 왼쪽이 표현법, 오른쪽이 
표현된 결과화면이다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/built/images/md-header1.png&quot; alt=&quot;헤더표현법1&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;헤더header-표현2&quot;&gt;헤더(Header) 표현(2)&lt;/h3&gt;
&lt;p&gt;헤더를 표현하는 두번째 방법은, 가장 자주 사용될 수 있는 H1 크기와 H2 크기를 아래와 같이 표현하는 것이다.
&lt;img src=&quot;assets/built/images/md-header2.png&quot; alt=&quot;헤더표현법2&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;이탤릭italic-표현&quot;&gt;이탤릭(Italic) 표현&lt;/h3&gt;
&lt;p&gt;이탤릭체는 &lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt; 혹은 &lt;code class=&quot;highlighter-rouge&quot;&gt;_&lt;/code&gt; 를 통해 아래와 같이 두가지 방법으로 표현할 수 있다.
&lt;img src=&quot;assets/built/images/md-italic.png&quot; alt=&quot;이탤릭&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;진하게bold-표현&quot;&gt;진하게(Bold) 표현&lt;/h3&gt;
&lt;p&gt;볼드체 표현은 &lt;code class=&quot;highlighter-rouge&quot;&gt;**&lt;/code&gt; 혹은 &lt;code class=&quot;highlighter-rouge&quot;&gt;__&lt;/code&gt; 를 통해 아래와 같이 두가지 방법으로 표현할 수 있다.
&lt;img src=&quot;assets/built/images/md-bold.png&quot; alt=&quot;진하게&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;링크link-걸기&quot;&gt;링크(Link) 걸기&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;assets/built/images/md-link.png&quot; alt=&quot;링크&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;이미지image-표현&quot;&gt;이미지(Image) 표현&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;assets/built/images/md-image.png&quot; alt=&quot;이미지&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;각주footnotes-표현&quot;&gt;각주(Footnotes) 표현&lt;/h3&gt;
&lt;p&gt;각주는 선언부와 표현부를 나누어 아래와 같이 표현 가능하다.&lt;/p&gt;

&lt;h4 id=&quot;선언부&quot;&gt;선언부&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;선언부 각주1[^1].  
선언부 각주2[^2].
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;위와 같이 표현하면, 아래와 같이 각주로 표시된다.&lt;/p&gt;

&lt;p&gt;선언부 각주1&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;br /&gt;
선언부 각주2&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;h4 id=&quot;표현부&quot;&gt;표현부&lt;/h4&gt;
&lt;p&gt;각주에 대한 설명을 달기위해서는 아래와 같이 표현한다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[^1]: 각주1에 대한 설명
[^2]: 각주2에 대한 설명
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;각주의 선언부를 클릭하면, 아래 표현부로 이동하게 된다.&lt;/p&gt;

&lt;h3 id=&quot;블락인용구blockquotes-표현&quot;&gt;블락인용구(Blockquotes) 표현&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt; 기호를 사용하여 블락인용구를 표현할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/built/images/md-blockquotes.png&quot; alt=&quot;이미지&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;코드-블락code-block-표현1&quot;&gt;코드 블락(Code Block) 표현(1)&lt;/h3&gt;
&lt;p&gt;띄어쓰기 4번을 통해 코드블락을 표현할 수 있다.&lt;/p&gt;

&lt;h4 id=&quot;표현법&quot;&gt;표현법&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    띄어쓰기를 통한 코드블락 표현
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;코드블락-적용결과&quot;&gt;코드블락 적용결과&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;띄어쓰기를 통한 코드블락 표현
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;코드-블락code-block-표현2&quot;&gt;코드 블락(Code Block) 표현(2)&lt;/h3&gt;
&lt;p&gt;물결무늬 감싸기를 통한 코드블락 표현도 가능하다.&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;각주1에 대한 설명 &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;각주2에 대한 설명 &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>Taehui Hong</name>
        
        
      </author>

      

      
        <category term="tips" />
      

      
        <summary type="html">마크다운은 사람들이 읽기 쉽고 쓰기 쉬운 플레인 텍스트 포맷을 사용하여, 서식이 있는 문서를 작성하기 위해 만들어진 마크업 언어입니다. 2004년 존 그루버가 RSS 1.0 의 공저자인 애런 스워츠와 협업을 통해 만들었으며, 아래 이미지를 보시면 보다 쉽게 이해가 됩니다. 화면 왼쪽이 작성된 마크다운 코드이고, 오른쪽이 서식이 적용된 HTML 결과 입니다.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Python 강좌(1) - Python 기본</title>
      <link href="https://taehui.github.io/platform-basic" rel="alternate" type="text/html" title="Python 강좌(1) - Python 기본" />
      <published>2020-01-21T01:40:00+09:00</published>
      <updated>2020-01-21T01:40:00+09:00</updated>
      <id>https://taehui.github.io/platform-basic</id>
      <content type="html" xml:base="https://taehui.github.io/platform-basic">&lt;p&gt;이 글은 깃페이지 플랫폼 관련 포스팅을 위한 템플릿 코드 입니다.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Taehui Hong</name>
        
        
      </author>

      

      
        <category term="platform" />
      

      
        <summary type="html">이 글은 깃페이지 플랫폼 관련 포스팅을 위한 템플릿 코드 입니다.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">하둡 입문(2강) - 하둡 설치</title>
      <link href="https://taehui.github.io/hadoop-2" rel="alternate" type="text/html" title="하둡 입문(2강) - 하둡 설치" />
      <published>2020-01-21T01:40:00+09:00</published>
      <updated>2020-01-21T01:40:00+09:00</updated>
      <id>https://taehui.github.io/hadoop-2</id>
      <content type="html" xml:base="https://taehui.github.io/hadoop-2">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;데이터 엔지니어를 위한 하둡(Hadoop) 강좌 시리즈 입니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./hadoop-1&quot;&gt;하둡 입문(1강) - 하둡의 탄생과 생태계의 활용&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./hadoop-2&quot;&gt;하둡 입문(2강) - 하둡 설치&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./hadoop-3&quot;&gt;하둡 입문(3강) - 하둡 분산파일시스템 이해1&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./hadoop-4&quot;&gt;하둡 입문(4강) - 하둡 분산파일시스템 이해2&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./hadoop-5&quot;&gt;하둡 입문(5강) - 하둡 맵리듀스&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./hadoop-6&quot;&gt;하둡 입문(5강) - 하둡 활용&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;하둡-설치동영상-강의&quot;&gt;하둡 설치(동영상 강의)&lt;/h2&gt;

&lt;iframe width=&quot;1280&quot; height=&quot;720&quot; src=&quot;https://www.youtube.com/embed/JuC9IJJ97DI&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;</content>

      
      
      
      
      

      <author>
          <name>Taehui Hong</name>
        
        
      </author>

      

      
        <category term="platform" />
      

      
        <summary type="html">데이터 엔지니어를 위한 하둡(Hadoop) 강좌 시리즈 입니다. 하둡 입문(1강) - 하둡의 탄생과 생태계의 활용 하둡 입문(2강) - 하둡 설치 하둡 입문(3강) - 하둡 분산파일시스템 이해1 하둡 입문(4강) - 하둡 분산파일시스템 이해2 하둡 입문(5강) - 하둡 맵리듀스 하둡 입문(5강) - 하둡 활용</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Numpy 살펴보기(1)</title>
      <link href="https://taehui.github.io/python-numpy-1" rel="alternate" type="text/html" title="Numpy 살펴보기(1)" />
      <published>2020-01-21T01:40:00+09:00</published>
      <updated>2020-01-21T01:40:00+09:00</updated>
      <id>https://taehui.github.io/python-numpy-1</id>
      <content type="html" xml:base="https://taehui.github.io/python-numpy-1">&lt;h2 id=&quot;numpy-란&quot;&gt;Numpy 란?&lt;/h2&gt;
&lt;p&gt;Numpy 는 Numerical Python 의 약자로 Python 에서 &lt;strong&gt;대규모 다차원 배열&lt;/strong&gt; 을 다룰 수 있게 도와주는 라이브러리 입니다.&lt;/p&gt;

&lt;p&gt;대부분의 데이터가 숫자의 배열로 나타낼 수 있기 때문에, Numpy 라이브러리는 효율적인 데이터분석이 가능하도록 N차원의 배열 
객체를 지원하며, Numpy가 널리쓰이고 강력하다는 말을 듣게 해주는 것은 바로 Numpy의 배열 객체인 ndarray의 힘이라고 봐도 과언이 아닙니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Numpy 를 쓰지 않고, Python 의 리스트로도 데이터 처리를 할 수 있는데?”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;라는 의문이 들 수도 있지만, Numpy 는 Python 의 리스트 보다 메모리를 보다 효율적으로 사용하며, 보다 빠른 연산을 지원합니다. 
따라서, 데이터 분석 분야에서 R 과 더불어 가장 널리 활용되는 Python 의 필수 라이브러리이며 대용량 데이터를 처리하는데 많이 사용됩니다.&lt;/p&gt;

&lt;h2 id=&quot;배열-만들기&quot;&gt;배열 만들기&lt;/h2&gt;

&lt;p&gt;numpy library에서 자주 사용하는 함수로는 아래와 같은 것들이 있습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;np.array -&amp;gt; 배열생성&lt;/li&gt;
  &lt;li&gt;np.zeros -&amp;gt; 0이 들어있는 배열 생성&lt;/li&gt;
  &lt;li&gt;np.ones -&amp;gt; 1이 들어있는 배열 생성&lt;/li&gt;
  &lt;li&gt;np.empty -&amp;gt; 초기화가 없는 값으로 배열을 반환&lt;/li&gt;
  &lt;li&gt;np.arange(n) -&amp;gt; 배열 버전의 range 함수&lt;/li&gt;
  &lt;li&gt;np.linspace(0, 1, 5) -&amp;gt; 0부터 1사이를 5개로 나눔&lt;/li&gt;
  &lt;li&gt;np.random.random((2, 2)) -&amp;gt; 2X2 행열을 난수로 채움&lt;/li&gt;
  &lt;li&gt;np.random.normal(0, 1, (2, 2)) -&amp;gt; 평균이 0이고, 표준편차가 1인 2X2 행열을 난수로 채움&lt;/li&gt;
  &lt;li&gt;np.random.randint(0, 10, (2, 2)) -&amp;gt; 0 ~ 10 사이의 2X2 행열을 난수로 채움&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;numpy-함수-예제&quot;&gt;Numpy 함수 예제&lt;/h3&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;c&quot;&gt;# 파이썬에서 리스트 만들기&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# numpy를 사용하기 위해 import&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# array([1, 2, 3, 4, 5])&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 1차원 배열을 생성&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;array1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# [0 1 2 3]&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 2차원 배열 생성&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;array2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
                   &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# [[1, 2],&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#  [3, 4]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;배열의-데이터타입-dtype&quot;&gt;배열의 데이터타입 dtype&lt;/h3&gt;

&lt;p&gt;Python 리스트와는 다르게 array 는 단일타입으로 구성이 됩니다. 아래의 예제에서 처럼 Data Type 정의를 &lt;code class=&quot;highlighter-rouge&quot;&gt;dtype=float&lt;/code&gt; 로 하게되면,
배열에 들어가는 모든 수는 float 형으로 생성이 됩니다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;# array([1., 2., 3., 4.])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# dtype('float64')&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 형변환을 위해서 astype 함수를 사용&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;astype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# array([1, 2, 3, 4])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Data Type 으로 표현할 수 있는 유형의 예는 아래와 같습니다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;dtype&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;설명&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;표현 유형&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;int&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;정수형 타입&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;i, int_, int32, int64, i8&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;float&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;실수형 타입&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;f, float_, float32, float64, f8&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;str&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;문자형 타입&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;str, U, U32&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;bool&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;불린 타입&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;?, bool_&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;c&quot;&gt;# 2*4 배열을 소수 1.0 으로 초기화 하여 생성&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;array2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ones&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# [[1. 1. 1. 1.]&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# [1. 1. 1. 1.]]&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 1차원 배열을 0 으로 초기화 하여 생성&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;array3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zeros&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# [0. 0. 0. 0. 0.]&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 리스트를 생성&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 리스트를 어레이로 변환&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;array_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 데이터타입 출력&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# int64&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 데이터 길이 출력&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 16&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 데이터 크기 출력&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 16&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 마스킹 연산을 활용하여 어레이 중에서 0 인 값을 세기&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 9&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# np.count_nonzero 함수를 사용하여 0 인 값 세기&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count_nonzero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 9&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>Taehui Hong</name>
        
        
      </author>

      

      
        <category term="language" />
      

      
        <summary type="html">Numpy 란? Numpy 는 Numerical Python 의 약자로 Python 에서 대규모 다차원 배열 을 다룰 수 있게 도와주는 라이브러리 입니다.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">하둡 입문(4강) - 하둡 분산파일시스템 이해2</title>
      <link href="https://taehui.github.io/hadoop-4" rel="alternate" type="text/html" title="하둡 입문(4강) - 하둡 분산파일시스템 이해2" />
      <published>2020-01-21T01:40:00+09:00</published>
      <updated>2020-01-21T01:40:00+09:00</updated>
      <id>https://taehui.github.io/hadoop-4</id>
      <content type="html" xml:base="https://taehui.github.io/hadoop-4">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;데이터 엔지니어를 위한 하둡(Hadoop) 강좌 시리즈 입니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./hadoop-1&quot;&gt;하둡 입문(1강) - 하둡의 탄생과 생태계의 활용&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./hadoop-2&quot;&gt;하둡 입문(2강) - 하둡 설치&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./hadoop-3&quot;&gt;하둡 입문(3강) - 하둡 분산파일시스템 이해1&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./hadoop-4&quot;&gt;하둡 입문(4강) - 하둡 분산파일시스템 이해2&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./hadoop-5&quot;&gt;하둡 입문(5강) - 하둡 맵리듀스&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./hadoop-6&quot;&gt;하둡 입문(5강) - 하둡 활용&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;하둡-분산파일시스템-이해2동영상-강의&quot;&gt;하둡 분산파일시스템 이해2(동영상 강의)&lt;/h2&gt;

&lt;iframe width=&quot;1280&quot; height=&quot;720&quot; src=&quot;https://www.youtube.com/embed/J7IV9vkSUtU&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;</content>

      
      
      
      
      

      <author>
          <name>Taehui Hong</name>
        
        
      </author>

      

      
        <category term="platform" />
      

      
        <summary type="html">데이터 엔지니어를 위한 하둡(Hadoop) 강좌 시리즈 입니다. 하둡 입문(1강) - 하둡의 탄생과 생태계의 활용 하둡 입문(2강) - 하둡 설치 하둡 입문(3강) - 하둡 분산파일시스템 이해1 하둡 입문(4강) - 하둡 분산파일시스템 이해2 하둡 입문(5강) - 하둡 맵리듀스 하둡 입문(5강) - 하둡 활용</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">하둡 입문(5강) - 하둡 맵리듀스</title>
      <link href="https://taehui.github.io/hadoop-5" rel="alternate" type="text/html" title="하둡 입문(5강) - 하둡 맵리듀스" />
      <published>2020-01-21T01:40:00+09:00</published>
      <updated>2020-01-21T01:40:00+09:00</updated>
      <id>https://taehui.github.io/hadoop-5</id>
      <content type="html" xml:base="https://taehui.github.io/hadoop-5">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;데이터 엔지니어를 위한 하둡(Hadoop) 강좌 시리즈 입니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./hadoop-1&quot;&gt;하둡 입문(1강) - 하둡의 탄생과 생태계의 활용&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./hadoop-2&quot;&gt;하둡 입문(2강) - 하둡 설치&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./hadoop-3&quot;&gt;하둡 입문(3강) - 하둡 분산파일시스템 이해1&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./hadoop-4&quot;&gt;하둡 입문(4강) - 하둡 분산파일시스템 이해2&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./hadoop-5&quot;&gt;하둡 입문(5강) - 하둡 맵리듀스&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./hadoop-6&quot;&gt;하둡 입문(5강) - 하둡 활용&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;하둡-맵리듀스동영상-강의&quot;&gt;하둡 맵리듀스(동영상 강의)&lt;/h2&gt;

&lt;iframe width=&quot;1280&quot; height=&quot;720&quot; src=&quot;https://www.youtube.com/embed/vNKNzl_wdDc&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;</content>

      
      
      
      
      

      <author>
          <name>Taehui Hong</name>
        
        
      </author>

      

      
        <category term="platform" />
      

      
        <summary type="html">데이터 엔지니어를 위한 하둡(Hadoop) 강좌 시리즈 입니다. 하둡 입문(1강) - 하둡의 탄생과 생태계의 활용 하둡 입문(2강) - 하둡 설치 하둡 입문(3강) - 하둡 분산파일시스템 이해1 하둡 입문(4강) - 하둡 분산파일시스템 이해2 하둡 입문(5강) - 하둡 맵리듀스 하둡 입문(5강) - 하둡 활용</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">하둡 입문(6강) - 하둡 활용</title>
      <link href="https://taehui.github.io/hadoop-6" rel="alternate" type="text/html" title="하둡 입문(6강) - 하둡 활용" />
      <published>2020-01-21T01:40:00+09:00</published>
      <updated>2020-01-21T01:40:00+09:00</updated>
      <id>https://taehui.github.io/hadoop-6</id>
      <content type="html" xml:base="https://taehui.github.io/hadoop-6">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;데이터 엔지니어를 위한 하둡(Hadoop) 강좌 시리즈 입니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./hadoop-1&quot;&gt;하둡 입문(1강) - 하둡의 탄생과 생태계의 활용&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./hadoop-2&quot;&gt;하둡 입문(2강) - 하둡 설치&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./hadoop-3&quot;&gt;하둡 입문(3강) - 하둡 분산파일시스템 이해1&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./hadoop-4&quot;&gt;하둡 입문(4강) - 하둡 분산파일시스템 이해2&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./hadoop-5&quot;&gt;하둡 입문(5강) - 하둡 맵리듀스&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./hadoop-6&quot;&gt;하둡 입문(5강) - 하둡 활용&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;하둡-활용동영상-강의&quot;&gt;하둡 활용(동영상 강의)&lt;/h2&gt;

&lt;iframe width=&quot;1280&quot; height=&quot;720&quot; src=&quot;https://www.youtube.com/embed/Tc0_Mkt6QZs&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;</content>

      
      
      
      
      

      <author>
          <name>Taehui Hong</name>
        
        
      </author>

      

      
        <category term="platform" />
      

      
        <summary type="html">데이터 엔지니어를 위한 하둡(Hadoop) 강좌 시리즈 입니다. 하둡 입문(1강) - 하둡의 탄생과 생태계의 활용 하둡 입문(2강) - 하둡 설치 하둡 입문(3강) - 하둡 분산파일시스템 이해1 하둡 입문(4강) - 하둡 분산파일시스템 이해2 하둡 입문(5강) - 하둡 맵리듀스 하둡 입문(5강) - 하둡 활용</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">하둡 입문(3강) - 하둡 분산파일시스템 이해1</title>
      <link href="https://taehui.github.io/hadoop-3" rel="alternate" type="text/html" title="하둡 입문(3강) - 하둡 분산파일시스템 이해1" />
      <published>2020-01-21T01:40:00+09:00</published>
      <updated>2020-01-21T01:40:00+09:00</updated>
      <id>https://taehui.github.io/hadoop-3</id>
      <content type="html" xml:base="https://taehui.github.io/hadoop-3">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;데이터 엔지니어를 위한 하둡(Hadoop) 강좌 시리즈 입니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./hadoop-1&quot;&gt;하둡 입문(1강) - 하둡의 탄생과 생태계의 활용&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./hadoop-2&quot;&gt;하둡 입문(2강) - 하둡 설치&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./hadoop-3&quot;&gt;하둡 입문(3강) - 하둡 분산파일시스템 이해1&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./hadoop-4&quot;&gt;하둡 입문(4강) - 하둡 분산파일시스템 이해2&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./hadoop-5&quot;&gt;하둡 입문(5강) - 하둡 맵리듀스&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./hadoop-6&quot;&gt;하둡 입문(5강) - 하둡 활용&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;하둡-분산파일시스템-이해1동영상-강의&quot;&gt;하둡 분산파일시스템 이해1(동영상 강의)&lt;/h2&gt;

&lt;iframe width=&quot;1280&quot; height=&quot;720&quot; src=&quot;https://www.youtube.com/embed/T6lng0734sc&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;</content>

      
      
      
      
      

      <author>
          <name>Taehui Hong</name>
        
        
      </author>

      

      
        <category term="platform" />
      

      
        <summary type="html">데이터 엔지니어를 위한 하둡(Hadoop) 강좌 시리즈 입니다. 하둡 입문(1강) - 하둡의 탄생과 생태계의 활용 하둡 입문(2강) - 하둡 설치 하둡 입문(3강) - 하둡 분산파일시스템 이해1 하둡 입문(4강) - 하둡 분산파일시스템 이해2 하둡 입문(5강) - 하둡 맵리듀스 하둡 입문(5강) - 하둡 활용</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">하둡 입문(1강) - 하둡의 탄생과 생태계의 활용</title>
      <link href="https://taehui.github.io/hadoop-1" rel="alternate" type="text/html" title="하둡 입문(1강) - 하둡의 탄생과 생태계의 활용" />
      <published>2020-01-21T01:40:00+09:00</published>
      <updated>2020-01-21T01:40:00+09:00</updated>
      <id>https://taehui.github.io/hadoop-1</id>
      <content type="html" xml:base="https://taehui.github.io/hadoop-1">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;데이터 엔지니어를 위한 하둡(Hadoop) 강좌 시리즈 입니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./hadoop-1&quot;&gt;하둡 입문(1강) - 하둡의 탄생과 생태계의 활용&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./hadoop-2&quot;&gt;하둡 입문(2강) - 하둡 설치&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./hadoop-3&quot;&gt;하둡 입문(3강) - 하둡 분산파일시스템 이해1&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./hadoop-4&quot;&gt;하둡 입문(4강) - 하둡 분산파일시스템 이해2&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./hadoop-5&quot;&gt;하둡 입문(5강) - 하둡 맵리듀스&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./hadoop-6&quot;&gt;하둡 입문(5강) - 하둡 활용&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;하둡의-탄생과-생태계의-활용동영상-강의&quot;&gt;하둡의 탄생과 생태계의 활용(동영상 강의)&lt;/h2&gt;

&lt;iframe width=&quot;1280&quot; height=&quot;720&quot; src=&quot;https://www.youtube.com/embed/r9i4fJH6kQ0&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;</content>

      
      
      
      
      

      <author>
          <name>Taehui Hong</name>
        
        
      </author>

      

      
        <category term="platform" />
      

      
        <summary type="html">데이터 엔지니어를 위한 하둡(Hadoop) 강좌 시리즈 입니다. 하둡 입문(1강) - 하둡의 탄생과 생태계의 활용 하둡 입문(2강) - 하둡 설치 하둡 입문(3강) - 하둡 분산파일시스템 이해1 하둡 입문(4강) - 하둡 분산파일시스템 이해2 하둡 입문(5강) - 하둡 맵리듀스 하둡 입문(5강) - 하둡 활용</summary>
      

      
      
    </entry>
  
</feed>
